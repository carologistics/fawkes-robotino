#include "fawkes.gpp"

Pose fluent pose(string frame) {
initially: (frame) = null;
}


Quaternion function quaternion(number roll, number pitch, number yaw) =
	fawkes_rpy_to_quaternion(roll, pitch, yaw)


Pose function pose_origin(string frame) = Pose {
	trans = Vector3 { x = 0, y = 0, z = 0 },
	rot = quaternion(0, 0, 0),
	frame = frame
}


Pose function grip_offset() = Pose {
	frame = "conveyor_pose",
	rot = quaternion(0, 0, 0),
	trans = Vector3 {
		x = 0.013,
		y = 0,
		z = 0.033
	}
}

Pose function gripper_max() = Pose {
	frame = "gripper_home",
	rot = quaternion(0, 0, 0),
	trans = Vector3 {
		x = fawkes_config_get_float("/arduino/x_max", 0.114),
		y = fawkes_config_get_float("/arduino/y_max", 0.075) / 2,
		z = fawkes_config_get_float("/arduino/z_max", 0.057)
	}
}

Pose function gripping_pose(string frame) =
	fawkes_transform_pose(grip_offset(), frame)

number function abs(number x) =
	if (x < 0) -1 * x
	else x

bool function pose_exceeds(Pose larger, Pose lesser) =
	abs(larger.trans.x) > abs(lesser.trans.x)
	| abs(larger.trans.y) > abs(lesser.trans.y)
	| abs(larger.trans.z) > abs(lesser.trans.z)


component manipulator_system {
clocks: clalign
states: aligned, unaligned, aligning
transitions:
	aligned -> unaligned,
	unaligned => aligning resets (clalign),
	aligning ->(clalign >= 2) aligned
}


	

action need_alignment() {
precondition:
	pose_exceeds(
		gripping_pose("gripper_home"),
		gripper_max()
	)
}

action noop() {}
