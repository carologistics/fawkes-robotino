#include "game.gpp"
#include "fawkes.gpp"

TeamColor fluent team_color() {
initially: () = CYAN;
}

action conveyor_align(Machine machine, MachineSide side) {
mapping:
	"conveyor_align" {
		place = to_string(team_color()) + "-" + to_string(machine),
		side = to_string(side)
	}
duration: [0,6]
}



action mps_align(Machine machine, MachineSide side) {
mapping:
	"mps_align" {
		tag_id = tag_id(team_color(), machine, side),
		x = 0.3
	}
duration: [1, 20]
}


action goto_place(string place) {
duration: [1, 20]
}


action product_put() {
}


component conveyordetection {
clocks: tfclock
states:
	idle, busy, successful(tfclock <= 4), failed
transitions:
	idle => busy,
	busy -> successful resets(tfclock),
	busy -> failed,
	failed => busy,
	failed -> idle,
	successful => busy,
	successful -> idle
}
	

component laserlines {
states:
	off, on
transitions:
	off => on,
	on => off
}


component realsense {
clocks:
	bcl
states:
	off, boot(bcl <= 4), on
transitions:
	off => boot resets(bcl),
	boot ->(bcl >= 2) on,
	on => off,
	error => off
}


constraints {
	during(goto_place(*)):
		state(realsense) = off;
	
	during(goto_place(*)):
		state(laserlines) = off;
		
	during(mps_align(*,*)) | during(conveyor_align(*,*)):
		state(realsense) = on;

	during(mps_align(*,*)) | during(conveyor_align(*,*)):
		state(laserlines) = on;
	
	start(conveyor_align(*,*)):
		state(conveyordetection) = successful;
		  // no workie? */
		//state(conveyordetection) = successful;
	
}


