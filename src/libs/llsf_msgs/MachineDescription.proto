
/***************************************************************************
 *  MachineDescription.proto - LLSF Protocol - Machine Specification message
 *
 *  Created: Mon Mar 20 22:13:50 2017
 *  Copyright  2013  Tim Niemueller [www.niemueller.de]
 *             2017  Tobias Neumann
 ****************************************************************************/

/*  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * - Neither the name of the authors nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto2";

package llsf_msgs;

option java_package = "org.robocup_logistics.llsf_msgs";
option java_outer_classname = "MachineDescriptionProtos";

enum LightColor {
  RED = 0;
  YELLOW = 1;
  GREEN = 2;
}

enum LightState {
  OFF = 0;
  ON = 1;
  BLINK = 2;
}

enum MachineSide {
  INPUT  = 1;
  OUTPUT = 2;
}

enum ConveyorDirection {
  FORWARD  = 1;	// from input to output
  BACKWARD = 2;	// from output to input
}

enum SensorOnMPS {
  SENSOR_INPUT  = 1;
  SENSOR_OUTPUT = 2;
  SENSOR_MIDDLE = 3;
}

enum SSOp {
  STORE   = 1;
  RETRIEVE = 2;
}

message SSSlot {
  // Ordering is a right hand coordinate system, starting at the left bottom front corner
  required uint32 x = 1; // [0-5] height; the shelfs
  required uint32 y = 2; // [0-3] width;  the place on the shelf
  required uint32 z = 3; // [0-1] depth;  the front or back row of the shelf
}

enum CSOp {
  RETRIEVE_CAP = 1;
  MOUNT_CAP    = 2;
}
