
/***************************************************************************
 *  ClipsSmtInfo.proto - LLSF Protocol - ClipsSmtInfo Specification message
 *
 *  Created: Wed Feb 8 09:44
 *  Copyright  2017  Francesco Leofante
 ****************************************************************************/

 /*  Redistribution and use in source and binary forms, with or without
  *  modification, are permitted provided that the following conditions
  *  are met:
  *
  * - Redistributions of source code must retain the above copyright
  *   notice, this list of conditions and the following disclaimer.
  * - Redistributions in binary form must reproduce the above copyright
  *   notice, this list of conditions and the following disclaimer in
  *   the documentation and/or other materials provided with the
  *   distribution.
  * - Neither the name of the authors nor the names of its contributors
  *   may be used to endorse or promote products derived from this
  *   software without specific prior written permission.
  *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  * OF THE POSSIBILITY OF SUCH DAMAGE.
  */

package llsf_msgs;

import "RobotInfo.proto";
import "OrderInfo.proto";
import "MachineInfo.proto";
import "RingInfo.proto";


 /*
 * -> CHECK THIS <-
 * We might need to import the following additional proto def:
 * RingInfo.proto, PuckInfo.proto , PuckState.proto , MachineInstruction.proto 
 */


option java_package = "org.robocup_logistics.llsf_msgs";
option java_outer_classname = "ClipsSmtDataProtos";

/*

enum WorkingPieceComponent {
    BASE_RED=0;
    BASE_SILVER=1;
    BASE_BLACK=2;
	RING_BLUE=3;
    RING_GREEN=4;
    RING_YELLOW=5;
    RING_ORANGE=6;
	CAP_BLACK=7;
    CAP_GRAY=8;
}

enum MachineType {
    BASE=0;
    CAP=1;
    RING=2;
    DELIVERY=3;
}

// types are required, optional, repeated

message WorkingPiece {

    // List of WorkingPieceComponents
    repeated WorkingPieceComponent workingPieceComponents = 1;
}

message Robot {

    // Id of robot
    required string id = 1;

    // Current position of robot as int
    required string currentPosition = 2;
    // Target position of robot as int
    required string targetPosition = 3;

    // Busy time left of robot till next possible action
    required string busyTimeLeft = 4;
}

message Machine {

    // Id of machine
    required string id = 1;

    // First position
    required string positionA = 2;
    // Second position for certain machines, TODO optional or required?
    optional string positionB = 3;

    // Current workingPiece
    required WorkingPiece workingPiece = 4;

    // WorkingPieceComponents needed for machine usage
    repeated WorkingPieceComponent inputWpType = 5;
    // WorkingPieceComponents already inside machine
    repeated WorkingPieceComponent inputWpContainer = 6;

    // WorkingPieceComponent which is produced by the machine
    required WorkingPieceComponent outputWpType = 7;

    // Default busy time of machine
    required string defaultBusyTime = 8;
    // Current busy time of machine
    required string busyTimeLeft = 9;

    // Type of machine
    required MachineType machineType = 10;
}

message Order {

    // Deadline of order
    required string deadline = 1;

    // Required workingPiece of order
    required WorkingPiece targetPiece = 2;
} */


message ClipsSmtData {

 /*
 * RECALL:
 *  required: a well-formed message must have exactly one of this field.
 *  optional: a well-formed message can have zero or one of this field (but not more than one).
 *  repeated:this field can be repeated any number of times (including zero) in a well-formed message. (preserves order)
 */

    // List of robots
    repeated Robot robots = 1;

    // List of machines
    repeated Machine machines = 2;

    // List of orders
    repeated Order orders = 3;

    // List of each ring color and its required payment material
    repeated Ring rings = 4;

	
    /*
    * Note: not listing RingInfo in here as
    * it seems to be redundant (already included
    * in OrderInfo and MachineInfo
    */
}
