
/***************************************************************************
 *  Sync.proto - Game synchronization messages
 *
 *  Created: Tue Jun 11 16:10:41 2013
 *  Copyright  2013  Tim Niemueller [www.niemueller.de]
 ****************************************************************************/

/*  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * - Neither the name of the authors nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package llsf_msgs;

import "MachineInfo.proto";
import "OrderInfo.proto";

option java_package = "org.robocup_logistics.llsf_msgs";
option java_outer_classname = "SyncProtos";

// Machine time specification. Used
// to specify down and delivery times
message MachineTimeSpec {
  // Machine specification applies to
  required string machine_name = 1;
  // Interval specification in game timee
  required float gt_from = 2;
  required float gt_to = 3;
}

// Machine processing time spec.
message MachineProcTime {
  // Machine type processing time applies to
  required string machine_type = 1;
  // Processing time in seconds
  required uint32 proc_time    = 2;
}

// Machine light specification
message MachineLightSpec {
  // Machine type light spec applies to
  required string    machine_type = 1;
  // The light specifications
  repeated LightSpec lights = 2;
}

// Machine type specification
message MachineTypeSpec {
  // Name of the machine
  required string name = 1;
  // Type of this machine
  required string type = 2;
}

// Synchronization information sent by
// master to slaves
message SyncInfo {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 5;
  }

  // Machine type and order specs
  repeated MachineTypeSpec  machines = 2;
  repeated Order            orders = 3;

  // Down, delivery and processing times
  repeated MachineTimeSpec  down_times = 4;
  repeated MachineTimeSpec  delivery_gates = 5;
  repeated MachineProcTime  proc_times = 6;

  // Light codes during exploration phase
  repeated MachineLightSpec exploration_lights = 7;
}

// Request game synchronization (slave)
message InitiateSync {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 6;
  }
}
