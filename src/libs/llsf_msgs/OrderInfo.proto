
/***************************************************************************
 *  OrderInstruction.proto - LLSF Protocol - Order Instruction message
 *
 *  Created: Mon Feb 25 11:37:09 2013
 *  Copyright  2013  Tim Niemueller [www.niemueller.de]
 ****************************************************************************/

/*  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * - Neither the name of the authors nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package llsf_msgs;

import "Team.proto";

option java_package = "org.robocup_logistics.llsf_msgs";
option java_outer_classname = "OrderInfoProtos";

message Order {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 40;
  }

  // Ordered product type
  enum ProductType {
    P1 = 1;
    P2 = 2;
    P3 = 3;
  }
  // Gate to deliver to, or any
  enum DeliveryGate {
    ANY = 1;
    D1  = 2;
    D2  = 3;
    D3  = 4;
    D4  = 5;
    D5  = 6;
    D6  = 7;
  }

  // ID and requested product of this order
  required uint32       id = 1;
  required ProductType  product = 2;
  optional Team         team_color = 11;

  // Quantity requested and delivered
  required uint32 quantity_requested = 3;
  required uint32 quantity_delivered = 4;

  // Start and end time of the delivery
  // period in seconds of game time
  required uint32 delivery_period_begin = 6;
  required uint32 delivery_period_end   = 7;

  // The gate to deliver to, defaults to any
  // (non-defunct, i.e. non-red light) gate
  optional DeliveryGate delivery_gate = 8
  	   [default = ANY];

}

message OrderInfo {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 41;
  }

  // The current orders
  repeated Order orders = 1;

  // Team for which the orders are
  // only send if all orders are for
  // the same team (broadcast)
  optional Team  team_color   = 2;
}
