/***************************************************************************
 *  Worldmodel.proto - Worldmodel of the LLSF Production for synchronization
 *
 *  Created: Mon Mar 10 15:10:52 2014
 *  Copyright  2013  Frederik Zwilling
 ****************************************************************************/

package llsf_msgs;

import "PuckInfo.proto";

enum IncomingAction {
  BRING_S0 = 0;
  BRING_S1 = 1;
  BRING_S2 = 2;
  PICK_PROD = 3;
  PICK_CO = 4;
  STORE_PUCK = 5;
  GET_STORED_PUCK = 6;
}

enum WorldmodelChangeType {
  ADD_LOADED_WITH = 0;
  REMOVE_LOADED_WITH = 1;
  ADD_INCOMING = 2;
  REMOVE_INCOMING = 3;
  SET_NUM_CO = 4;
  SET_PROD_FINISHED_TIME = 5;
  REMOVE_PRODUCED = 6;
  SET_PRODUCE_BLOCKED = 7;
  SET_RECYCLE_BLOCKED = 8;
  SET_DOUBTFUL_WORLDMODEL = 9;
  SET_IN_DELIVERY = 10;
  RESET_PRODUCE_BLOCKED = 11;
  SET_OUT_OF_ORDER_UNTIL = 12;
}

message MachineState {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 1339;
  }

  optional string    name     = 1;
  repeated PuckState loaded_with  = 2;
  repeated IncomingAction incoming  = 3;
  repeated string incoming_agent  = 4;
  required uint32 prod_finished_time = 5;
  optional PuckState puck_under_rfid = 6;
  required bool produce_blocked = 7;
  required bool recycle_blocked = 8;
  optional uint32 order = 9;
  optional uint32 in_delivery = 10;
  required uint32 junk = 11;
  required uint32 out_of_order_until = 12;
}

message PuckStorageState {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 1347;
  }

  required string    name     = 1;
  optional PuckState puck  = 2;
  repeated IncomingAction incoming  = 3;
  repeated string incoming_agent  = 4;
}

message WorldmodelOrder {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 1345;
  }

  optional uint32 id = 1;
  optional uint32 in_delivery = 2;
}

message Worldmodel {
  //With this message the master publishes his worldmodel

  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 1340;
  }

  // List of machines states
  repeated MachineState machines = 1;
  repeated WorldmodelOrder orders = 2;
  repeated PuckStorageState storage = 3;
}

message WorldmodelChange {
  // With this message a Slave informs the master about a change in the worldmodel

  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 1341;
  }

  required uint32 id = 1;
  optional string machine = 2;
  required WorldmodelChangeType change = 3;
  optional IncomingAction incoming = 4;
  required string agent = 5;
  optional PuckState loaded_with = 6;
  optional uint32 num_CO = 7;
  optional uint32 prod_finished_time = 8;
  optional uint32 order = 9;
  optional uint32 out_of_order_until = 10;
}

message WorldmodelChangeAck {

  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 1342;
  }
  required uint32 id = 1;
}
