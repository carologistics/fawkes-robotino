
/***************************************************************************
 *  OrderInstruction.proto - LLSF Protocol - Order Instruction message
 *
 *  Created: Mon Feb 25 11:37:09 2013
 *  Copyright  2013  Tim Niemueller [www.niemueller.de]
 ****************************************************************************/

/*  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * - Neither the name of the authors nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto2";

package llsf_msgs;

import "Team.proto";
import "ProductColor.proto";

option java_package = "org.robocup_logistics.llsf_msgs";
option java_outer_classname = "OrderInfoProtos";

message Order {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 42;
  }

  // Ordered product type
  enum Complexity {
    C0 = 0;
    C1 = 1;
    C2 = 2;
    C3 = 3;
  }

  // ID and requested product of this order
  required uint32       id = 1;
  required Complexity   complexity = 2;

  required BaseColor    base_color = 3;
  repeated RingColor    ring_colors = 4;
  required CapColor     cap_color = 5;

  // Quantity requested and delivered
  required uint32 quantity_requested = 6;
  required uint32 quantity_delivered_cyan = 7;
  required uint32 quantity_delivered_magenta = 8;

  // Start and end time of the delivery
  // period in seconds of game time
  required uint32 delivery_period_begin = 9;
  required uint32 delivery_period_end   = 10;

  // The gate to deliver to, defaults to any
  // (non-defunct, i.e. non-red light) gate
  required uint32 delivery_gate = 11;

}

message OrderInfo {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 41;
  }

  // The current orders
  repeated Order orders = 1;
}


message SetOrderDelivered {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 43;
  }

  required Team team_color = 1;
  required uint32 order_id = 2;
}


message SetOrderDeliveredByColor {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 44;
  }

  required Team         team_color = 1;

	/** Colors of delivered product. Zero,
	 * or more rings orderd from bottom to top */
  required BaseColor    base_color = 3;
  repeated RingColor    ring_colors = 4;
  required CapColor     cap_color = 5;
}
