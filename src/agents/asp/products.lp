% Defined programs:
% base                           The initial setup.
% transition(gt)                 The transformations of the products.
%
% In this file defined predicates:
% base(P, B)                     The base color of product P is B.
% cap(P, C, GT)                  The cap color of product P at GT is C.
% product(R, I)                  A product generated by R, its index is I.
% ring(P, R, C, GT)              The ring color of the R-th ring of product P at GT is C.
%
% Additionally used predicates:
% capMounted(P, C, GT)           Defined in mountCap.lp
% capStationAssignment(M, C)     Defined in facts.lp
% delivered(P, GT)               Defined in delivery.lp
% deliveryTimes(B, E)            Defined in facts.lp
% genProduct(R, B, GT)           Defined in some task descriptions.
% ringMounted(M, P, C, GT)       Defined in mountRing.lp
% robot(R)                       Defined in facts.lp


#program transition(gt).
{ base(product(R, gt), B);
  cap( product(R, gt), none, gt);
  ring(product(R, gt), 1, "none", gt);
  ring(product(R, gt), 2, "none", gt);
  ring(product(R, gt), 3, "none", gt)
  } = 5 :- genProduct(R, B, gt).

cap(P, C, gt) :- cap(P, C, gt-1), not capMounted(_, P, gt), not delivered(P, gt).
cap(P, C, gt) :- capMounted(M, P, gt), capStationAssignment(M, C), not delivered(P, gt).

ring(P, R, C, gt) :- ring(P, R, C, gt-1), not ringMounted(_, P, _, gt), not delivered(P, gt).
ring(P, R, C, gt) :- ringMounted(_, P, C, gt), ring(P, R, none, gt-1), not ring(P, R-1, none, gt-1).
%ring(P, 1, C, gt) :- ringMounted(_, P, C, gt), ring(P, 1, none, gt-1).
