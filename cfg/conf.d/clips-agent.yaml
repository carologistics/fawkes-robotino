%YAML 1.2
%TAG ! tag:fawkesrobotics.org,cfg/
---
doc-url: !url http://trac.fawkesrobotics.org/wiki/Plugins/clips-agent
---
clips-agent:
  # If true, will enable watching of facts and rules
  clips-debug: true

  # Directory where to look for CLIPS files
  clips-dirs: ["@BASEDIR@/src/agents/"]

  # If CLIPS debugging is enabled, certain rules and facts can be excluded
  # from watching, e.g. if they are showing up at too high frequencies or
  # are not of interest.
  unwatch-facts: ["time"]
  unwatch-rules: ["time-retract", "blackboard-read"]

  # If true, simulate skills (assuming they always succeed) instead of
  # actually executing the skills. The time indicates how long it should
  # take to declare success on skill execution. Note that this cannot
  # simulate side effects, like a called component writing to an interface
  skill-sim: false
  skill-sim-time: 2.0

  # automatically pre-require redefine-warning feature? Enabling
  # this in the plugin instead of in the initial code (init.clp) is
  # beneficial because it already catches errors in said file.
  request-redefine-warning-feature: true

  # If set to true, will trigger the assertion of a (time (now)) fact in
  # each loop. This can be used to trigger loop events in CLIPS.
  assert-time-each-loop: true

  # If set to true will force the acquisition of the skiller control.
  # This is particularly useful to kick an SkillGUI which is holding
  # the lock just due to an oversight.
  steal-skiller-control: true
 
  # Agent name. On startup the clips-agent will try to resolve a file named
  # <agent name>.clp. It must be in the CLIPS path directories.
  agent: llsf2014/llsf2014

 
  llsf2014:
    #agent-role defined in host.yaml (this is only the default!)
    agent-role: nothing
        
    enable-sim: false

    peer-address: 172.26.255.255
    #use this for talking to the refbox on the same laptop:
    #peer-recv-port: 4444
    #peer-send-port: 4445
    #use this for talking to the real refbox:
    peer-port: 4444

    team-name: Carologistics

    #Timeouts used in the locking:
    #Timeout a in pre-game started robot waits for a master before it gets the master itself
    initial-master-timeout: 5.0
    #If a robot has not been seen this time it is assumed that he is lost
    robot-timeout: 50.0

    #distance needed before a robot releases a lock
    release-distance: 0.75

    waiting-points:
      ins-1-robotino1: WAIT_FOR_INS_1_ROBOTINO_1
      ins-2-robotino1: WAIT_FOR_INS_2_ROBOTINO_1
      ins-1-robotino2: WAIT_FOR_INS_1_ROBOTINO_2
      ins-2-robotino2: WAIT_FOR_INS_2_ROBOTINO_2
      ins-1-robotino3: WAIT_FOR_INS_1_ROBOTINO_3
      ins-2-robotino3: WAIT_FOR_INS_2_ROBOTINO_3
      deliver1: WAIT_FOR_DELIVER_1
      deliver2: WAIT_FOR_DELIVER_2

    production-times:
      t1-min: 3
      t1-max: 8
      t2-min: 15
      t2-max: 25
      t3-min: 40
      t3-max: 60
      t4-min: 40
      t4-max: 60
      t5-min: 20
      t5-max: 40
      recycle-min: 2
      recycle-max: 2

    exploration:      
      #row defined in host.yaml (this is only the default!)
      row: MID
      
      row-high: ["M12", "M11", "M8", "M5", "M17", "M20", "M23", "M24"]
      row-mid: ["M10", "M7", "M4", "M2", "M14", "M16", "M19", "M22"]
      row-low: ["M9", "M6", "M3", "M1", "M13", "M15", "M18", "M21"]

      #the time in seconds to report all machines even if we are not prepared for production
      latest-send-last-report-time: 225 # =3:45

      needed-visibility-history: 15

