%YAML 1.2
%TAG ! tag:fawkesrobotics.org,cfg/
---
doc-url: !url http://trac.fawkesrobotics.org/wiki/Plugins/webview
---
webview:
  # TCP port for Webview HTTP requests; TCP port
  port: !tcp-port 8088

  # True to allow client side caching. Typically you want this disabled
  # to force proper reloads each time with fresh data.
  client_side_caching: false

  tls:
    # Encrypt connections?
    enable: false

    # Create self-signed certificate if key and certificate files not found?
    create: true

    # Key file name, if not absolute relative to config dir.
    key-file: webview.key

    # Certificate file name, if not absolute relative to config dir.
    cert-file: webview.crt

    # Default suite allowing only secure ciphers with 128 bits or more for
    # the stream cipher. Only TLS 1.2 is allowed. Older versions or SSLv3
    # are disabled.
    # The cipher suite is documented as GnuTLS priority strings at
    # http://gnutls.org/manual/html_node/Priority-Strings.html
    cipher-suite: SECURE128:-VERS-SSL3.0:-VERS-TLS-ALL:+VERS-TLS1.2

  # cross-origin resource sharing (CORS)
  # This concerns requests where the web app does not originate from
  # the same server as the URL requested. An example is running the
  # webview frontend locally in development mode or to access multiple
  # robots from one interface.
  #
  # Modern browsers will only process resources if the server allows
  # access through the Access-Control-Allow-Origin header.
  # cf https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
  # or https://enable-cors.org/
  cors:
    allow:
      # Allow all access, sets header to '*'
      all: true
      # Allow access only from specific domains
      #origins: ["http://localhost:4200"]

    # time to allow clients to cache our response
    max-age: 86400

  # libmicrohttpd thread pool settings
  # Using a thread pool allows for the concurrent processing of
  # incoming requests and should generally be enabled.
  thread-pool:
    enable: true
    num-threads: 8

  # Use basic authentication?
  use_basic_auth: false

  # Access log filename
  # access_log: access_log

  # Example user, delete or change password!
  # Use !cleartext! prefix if you really want to use a clear text password
  # (discouraged). Note that the password is only compared to the suffix.
  # If you have a system that supports APR use
  #   htpasswd -nB USERNAME
  # to generate an appropriate password string and copy and paste the part
  # after the colon and after the colon only.
  users:
    fawkes: "!cleartext!fawkes"

  # Image specific settings, format is (all values are optional):
  # image_id:
  #   jpeg-quality: J
  #   mjpeg-fps: F
  #   jpeg-vflip: true/false
  # J is the JPEG quality balancing file size and quality, range 1-100,
  #   depends on actual compressor used
  #   For libjpeg 70 or 80 are good values, for MMAL (Raspberry Pi) 5-10 are fine
  # F Number of frames per second for MJPEG-streams
  # Vertical flipping can be enabled, e.g. for ceiling cameras
  images:
    # default settings if there are no specific settings
    default:
      jpeg-quality: 75
      mjpeg-fps: 15
      jpeg-vflip: false

  # directories with static files
  htdocs:
    dirs: ["@BASEDIR@/res/webview"]

    # If the catchall file is set, the static file processor will
    # listen to /{file+}. Any file, that it cannot resolve within the
    # htdocs dir, will result in serving the given file.
    # For example, for the Angular frontend, this must be the
    # index.html file. The 404 response is then generated by the
    # Angular app (usually redirecting to the front page)
    catchall-file: index.html

    # A file which contains mime-type to file ending mappings
    # Typically this is provided by mailcap in /etc/mime.types.
    mime-file: /etc/mime.types

