%YAML 1.2
%TAG ! tag:fawkesrobotics.org,cfg/
---
doc-url: !url http://trac.fawkesrobotics.org/wiki/Plugins/webview
---
plugins/conveyor_pose:
  # sets the debug mode within the plugin, which eases the debugging,
  # which results in the following:
  # - the switch if is ignored, the plugin is always running
  debug: false

  # the point cloud that is used for detection (i.e. the scene)
  cloud_in: "/camera/depth/points"

  # Write trimmed scene cloud into model_file (see options below for file name and
  # trimming parameters)
  # This completely changes the mode of operation to just record pointclouds,
  # no recognition is done when this is enabled.
  # If the target file already exists, an increasing integer is appended until
  # a file is found that doesn't exist, yet.
  record_model: false

  # If recording is enabled, a PCD file is written to CONFDIR "/" record path
  # (e.g.: conveyor_model_.pcd)
  record_path: "conveyor_model.pcd"

  # When recording a model (see above), transform the recorded model into this frame before
  # saving it. The robot should be positioned so that this frame is at the desired origin of
  # the conveyor (align the conveyor cloud & the TF in rviz)
  model_origin_frame: "gripper_fingers"

  # Path to the PCD file containing the conveyor model.
  # Relative paths (i.e. not starting with "/") are looked up in CONFDIR (e.g. fawkes-robotino/cfg)
  model_file: "conveyor_pcls/default.pcd"

  # Paths to the default PCD models taking as reverence model in the conveyor pose model
  reference_default_models:
    with_cone: "conveyor_pcls/default_with_cone.pcd"
    no_cone: "conveyor_pcls/default_no_cone.pcd"
    shelf: "conveyor_pcls/default_puck.pcd"
    slide: "conveyor_pcls/default_slide.pcd"

  # Configurable PCD paths for every station containing the conveyor model
  # If the value is "default", the model_file PCD is taken
  model_files:
    M-BS-I:  "conveyor_pcls/no_cone.pcd"
    M-BS-O:  "conveyor_pcls/no_cone.pcd"
    C-BS-I:  "conveyor_pcls/no_cone.pcd"
    C-BS-O:  "conveyor_pcls/no_cone.pcd"
    M-CS1-I: "conveyor_pcls/with_cone.pcd"
    M-CS1-O: "conveyor_pcls/no_cone.pcd"
    C-CS1-I: "conveyor_pcls/with_cone.pcd"
    C-CS1-O: "conveyor_pcls/no_cone.pcd"
    M-CS2-I: "conveyor_pcls/with_cone.pcd"
    M-CS2-O: "conveyor_pcls/no_cone.pcd"
    C-CS2-I: "conveyor_pcls/with_cone.pcd"
    C-CS2-O: "conveyor_pcls/no_cone.pcd"
    M-DS-I:  "conveyor_pcls/with_cone.pcd"
    C-DS-I:  "conveyor_pcls/with_cone.pcd"
    M-RS1-I: "conveyor_pcls/with_cone.pcd"
    M-RS1-O: "conveyor_pcls/no_cone.pcd"
    C-RS1-I: "conveyor_pcls/with_cone.pcd"
    C-RS1-O: "conveyor_pcls/no_cone.pcd"
    M-RS2-I: "conveyor_pcls/with_cone.pcd"
    M-RS2-O: "conveyor_pcls/no_cone.pcd"
    C-RS2-I: "conveyor_pcls/with_cone.pcd"
    C-RS2-O: "conveyor_pcls/no_cone.pcd"
    M-SS-I:  "conveyor_pcls/no_cone.pcd"
    M-SS-O:  "conveyor_pcls/no_cone.pcd"
    C-SS-I:  "conveyor_pcls/no_cone.pcd"
    C-SS-O:  "conveyor_pcls/no_cone.pcd"

  voxel_grid:
    # Downsample all point clouds to this resolution
    leaf_size: 0.001

  icp:
    # Recognition parameters

    # Ignore model point if it doesn't have a scene correspondence within this radius
    # ATTENTION: this is very sensitive to the error of the initial estimate!
    max_correspondence_dist: 0.01

    # ICP stops iterating if the last transformation was shorter than this distance.
    # If this value is reached, max_correspondence_dist is multiplied by refinement_factor.
    # This value refers to translation only.
    transformation_epsilon: 0.001

    # Multiply max_correspondence_dist by this factor if transformation_epsilon was reached.
    # This is needed to be able to ignore model points that are invisible in the scene due to
    # self-occlusion.
    # Range: (0,1)
    refinement_factor: 0.85

    # Maximum number of (internal!) ICP iterations per recognition loop
    max_iterations: 2

    # Minimum number of recognition loops before the first hypothesis verification is performed
    min_loops: 5

    # Maximum number of recognition loops before either stopping or restarting with a new scene
    max_loops: 30

    # Restart with a new scene when max_loops have been run, even if a match has been found
    # (i.e. run until the whole plugin is disabled via the switch interface)
    # If false, the recognition loop stops if a match has been found within max_loops.
    auto_restart: false


    # Hypothesis Verification

    # Model points that have scene points within this radius are considered supported.
    # Those that have none are penalized. See the support/penalty thresholds below.
    # Pay attention to the voxel_grid/leaf_size value above. The closer this gets to the
    # leaf size (i.e. the cloud resolution), the unlikelier it is to match anything.
    hv_inlier_threshold: 0.004

    # Max. proportion of penalized model points for a match
    hv_penalty_threshold: 0.1

    # Min. proportion of supported model points for a match
    hv_support_threshold: 0.7


    # Offset of interesting objects relative to the center of the laser line

    hint:
      conveyor:
        x: 0.015
        y: -0.02
        z: 0.6
      left_shelf:
        x: -0.01
        y: -0.22
        z: 0.6
      middle_shelf:
        x: -0.01
        y: -0.27
        z: 0.6
      right_shelf:
        x: -0.01
        y: -0.32
        z: 0.6
      slide:
        x: -0.01
        y: -0.32
        z: 0.6
    
    
    # Station-specific offset in y direction added to the hints configured above.
    # These offsets are required, as the conveyor belt can be mounted onto different
    # rails for the different MPS
    mps_type_offset:
      cap_station:
        y: -0.025
      ring_station:
        y: -0.025
      delivery_station:
        y: -0.025
      base_station:
        y: -0.025
      storage_station:
        y: -0.025

  if:
    # the prefix used for all interfaces
    prefix: conveyor_pose

    # the switch interface
    switch: switch
    # the laser lines, they don't use the prefix
    laser_lines: [
      "/laser-lines/1",
      "/laser-lines/2",
      "/laser-lines/3",
      "/laser-lines/4",
      "/laser-lines/5",
      "/laser-lines/6",
      "/laser-lines/7",
      "/laser-lines/8"
    ]

  conveyor_frame_id: conveyor_pose
  switch_default: false

  # the dimensions of the gripper in the point cloud (check rotation of actual tf)
  gripper:
    y_min: -0.055
    y_max: -0.015
    z_max: 0.135
    slice:
      y_min: -0.04
      y_max: 0.03
  front:
    # the distance that is not pruned at the front of the MPS
    space: 0.6
    # this should be a tf, but I did not get it work :(
    offset: 0.005
  left_right:
    left_cut: 0.1
    right_cut: 0.1
    left_cut_no_ll: 0.1
    right_cut_no_ll: 0.1


